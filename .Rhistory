?melt
library(reshape2)
?melt
setwd("~/Documents/Coursera/DataScientistSpec/08 Practical Machine Learning/Peer_Project")
qplot(x=Var1, y=Var2, data=melt(cor(train)), fill=value, geom="tile")
library(ggplot2)
qplot(x=Var1, y=Var2, data=melt(cor(train)), fill=value, geom="tile")
train <- read.table("data/training.csv", header = TRUE, sep = ",", na.strings = c("NA", ""))
nastrings <- c( "NA", "", "#DIV/0!" )
train <- read.table("data/training.csv", header = TRUE, sep = ",", na.strings = nastrings)
qplot(x=Var1, y=Var2, data=melt(cor(train)), fill=value, geom="tile")
str(train)
trainOV <- nearZeroVar(train, saveMetrics = TRUE)
require(ggplot2)
require(caret)
require(RANN)
trainOV <- nearZeroVar(train, saveMetrics = TRUE)
nzvT <- nearZeroVar(train)
trainOV$totalNAs <- colSums(is.na(train))
trainOV$Class <- sapply(train, class)
tail(trainOV)
trainOV[ trainOV$Class == "factor", ]
t_c_only <- train[, -c("user_name", "new_window", "cvtd_timestamp")]
head(trainOV)
t_c_only <- train[, c(1, 4, 7:160)]
?dummyVars
examples(dummyVars)
example(dummyVars)
when
c_dummies <- dummyVars( ~ classe, data = train)
train_w_dummies <- predict(c_dummies, newdata = train)
head(train_w_dummies)[1:5, c(1:4, 159:164)]
dim(train_w_dummies)
head(train_w_dummies)
t_c_only <- train[, c(1, 4, 7:159)]
t_c_only <- cbind(t_c_only, train_w_dummies)
qplot(x=Var1, y=Var2, data=melt(cor(train)), fill=value, geom="tile")
trainOV
logicals <- t_c_only[t_c_only$Class == "logical", ]
t_c_only <- t_c_only[ , -logicals]
?which
logicals <- grepl("logical", t_c_only$Class)
?grepl
logicals <- grepl("logical", trainOV$Class)
t_c_only <- t_c_only[ , -which(logicals)]
t_c_only <- train[, c(1, 4, 7:159)]
t_c_only <- train[ , - which(logicals)]
head(t_c_only)[1:10]
t_c_only <- t_c_only[, c(1, 4, 7:153)]
t_c_only <- cbind(t_c_only, train_w_dummies)
names(t_c_only)
qplot(x=Var1, y=Var2, data=melt(cor(train)), fill=value, geom="tile")
tco_classes <- sapply(t_c_only, class)
tco_classes
tco_classes <- as.data.frame(sapply(t_c_only, class))
tco_classes
qplot(x=Var1, y=Var2, data=melt(cor(train)), fill=value, geom="tile")
qplot(x=Var1, y=Var2, data=melt(cor(t_c_only)), fill=value, geom="tile")
